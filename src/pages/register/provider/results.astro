---
import Layout from '../../../layouts/Layout.astro';
import Header from '../../../components/Header.astro';
import Footer from '../../../components/Footer.astro';

// Simulación de clientes potenciales
const potentialClients = [
  {
    id: 1,
    name: "Innovatech Solutions",
    industry: "tech",
    location: "Madrid, España",
    size: "medium",
    budget: "medium",
    description: "Empresa de desarrollo de software buscando soluciones de ciberseguridad.",
    match: 95,
    premium: true
  },
  {
    id: 2,
    name: "Constructora ABC",
    industry: "construction",
    location: "Barcelona, España",
    size: "large",
    budget: "large",
    description: "Empresa de construcción en búsqueda de proveedores de materiales.",
    match: 88,
    premium: false
  },
  {
    id: 3,
    name: "HealthCare Plus",
    industry: "health",
    location: "Valencia, España",
    size: "small",
    budget: "medium",
    description: "Clínica privada buscando servicios de gestión de pacientes.",
    match: 82,
    premium: true
  },
  {
    id: 4,
    name: "EduTech Innovators",
    industry: "education",
    location: "Sevilla, España",
    size: "medium",
    budget: "small",
    description: "Startup de tecnología educativa buscando soluciones de e-learning.",
    match: 78,
    premium: false
  },
  {
    id: 5,
    name: "Finanzas Seguras",
    industry: "financial",
    location: "Bilbao, España",
    size: "large",
    budget: "enterprise",
    description: "Empresa de servicios financieros buscando soluciones de seguridad.",
    match: 85,
    premium: true
  },
  {
    id: 6,
    name: "Retail Solutions",
    industry: "retail",
    location: "Zaragoza, España",
    size: "small",
    budget: "medium",
    description: "Empresa de comercio minorista buscando soluciones de gestión de inventarios.",
    match: 80,
    premium: false
  },
  {
    id: 7,
    name: "Manufacturing Pro",
    industry: "manufacturing",
    location: "Málaga, España",
    size: "large",
    budget: "enterprise",
    description: "Empresa industrial en búsqueda de optimización de procesos.",
    match: 73,
    premium: true
  }
];
---

<Layout title="Clientes Potenciales | B2B Connect">
  <Header />
  
  <main class="pt-32 pb-20 bg-white">
    <div class="container mx-auto px-4">
      <div class="max-w-5xl mx-auto">
        <div class="text-center max-w-3xl mx-auto mb-10">
          <h1 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
            ¡Hemos encontrado clientes para ti!
          </h1>
          <p class="text-xl text-gray-600">
            Basados en tu perfil, estos son los clientes que podrían estar interesados en tus servicios.
          </p>
        </div>
        
        <div class="bg-white rounded-xl shadow-md p-6 md:p-8 mb-10 border border-gray-100">
          <!-- Lista de clientes (con blur) -->
          <div id="results-container" class="space-y-4 relative">
            <div class="blur-sm pointer-events-none">
              {potentialClients.map((client) => (
                <div class={`border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow ${client.premium ? 'relative overflow-hidden' : ''}`}>
                  {/*client.premium && (
                    <div class="absolute top-0 right-0">
                      <div class="bg-yellow-500 text-white px-8 py-1 rotate-45 translate-x-6 -translate-y-1 text-sm font-semibold">
                        PREMIUM
                      </div>
                    </div>
                  )*/}
                  
                  <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
                    <div class="flex-1">
                      <div class="flex flex-wrap items-center gap-2 mb-1">
                        <h3 class="text-lg font-semibold text-gray-900">{client.name}</h3>
                        <span class="bg-blue-100 text-blue-800 text-xs px-2 py-0.5 rounded-full">
                          {client.industry === 'tech' ? 'Tecnología' : 
                           client.industry === 'construction' ? 'Construcción' : 
                           client.industry === 'health' ? 'Salud' : 
                           client.industry === 'education' ? 'Educación' :
                           client.industry === 'financial' ? 'Finanzas' :
                           client.industry === 'retail' ? 'Comercio' : 
                           client.industry === 'manufacturing' ? 'Manufactura' : client.industry}
                        </span>
                        <span class="bg-green-100 text-green-800 text-xs px-2 py-0.5 rounded-full flex items-center">
                          <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                          </svg>
                          <span>{client.match}% coincidencia</span>
                        </span>
                      </div>
                      <p class="text-gray-600 text-sm mb-2">{client.description}</p>
                      <div class="flex flex-wrap items-center gap-4 text-sm text-gray-500">
                        <span class="flex items-center">
                          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                          </svg>
                          {client.location}
                        </span>
                        <span class="flex items-center">
                          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0z" />
                          </svg>
                          {client.size === 'micro' ? '1-10 empleados' : 
                           client.size === 'small' ? '11-50 empleados' : 
                           client.size === 'medium' ? '51-250 empleados' : '250+ empleados'}
                        </span>
                        <span class="flex items-center">
                          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                          </svg>
                          {client.budget === 'small' ? 'Menos de 1.000€' : 
                           client.budget === 'medium' ? '1.000€ - 10.000€' : 
                           client.budget === 'large' ? '10.000€ - 50.000€' : 'Más de 50.000€'}
                        </span>
                      </div>
                    </div>
                    <div class="flex justify-end">
                      <button 
                        class="client-details-button px-4 py-2 bg-blue-600 text-white font-medium rounded-lg transition-colors hover:bg-blue-700 whitespace-nowrap"
                        data-client-id={client.id}
                        data-premium={client.premium ? 'true' : 'false'}
                      >
                        Ver detalles
                      </button>
                    </div>
                  </div>
                </div>
              ))}
            </div>
            
            <!-- Overlay de desbloqueo inicial -->
            <div id="initial-paywall-overlay" class="absolute inset-0 flex flex-col items-center justify-center bg-white rounded-lg p-4">
              <div class="text-center max-w-md px-4">
                <div class="w-20 h-20 mx-auto mb-6 text-blue-600">
                  <svg xmlns="http://www.w3.org/2000/svg" class="w-full h-full" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                  </svg>
                </div>
                <h3 class="text-2xl font-bold text-gray-900 mb-3">Desbloquea clientes potenciales</h3>
                <p class="text-gray-600 mb-6">
                  Has encontrado {potentialClients.length} clientes potenciales para tu negocio. Desbloquea el acceso básico para ver más detalles.
                </p>
                <div class="bg-blue-50 border border-blue-200 rounded-lg p-6 mb-6 shadow-sm">
                  <h4 class="text-xl font-semibold text-gray-900 mb-2">Acceso Inicial</h4>
                  <div class="text-3xl font-bold text-blue-700 mb-4">$9 <span class="text-sm font-normal text-gray-600">/ único pago</span></div>
                  <ul class="text-left space-y-2 mb-6">
                    <li class="flex items-start">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-green-500 flex-shrink-0 mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                      </svg>
                      <span>Vista previa de clientes potenciales</span>
                    </li>
                    <li class="flex items-start">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-green-500 flex-shrink-0 mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                      </svg>
                      <span>Información básica de oportunidades</span>
                    </li>
                    <li class="flex items-start">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-green-500 flex-shrink-0 mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                      </svg>
                      <span>Posibilidad de mejorar a planes premium</span>
                    </li>
                  </ul>
                  <button id="unlock-basic-results-button" class="w-full px-6 py-3 bg-blue-600 text-white font-medium rounded-lg transition-colors hover:bg-blue-700 shadow-sm">
                    Desbloquear por $9
                  </button>
                </div>
                <div class="flex items-center justify-center text-xs text-gray-500">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
                  </svg>
                  <span>Pago 100% seguro. Si no encuentras lo que buscas, te devolvemos tu dinero.</span>
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <div class="text-center mt-12">
          <div class="flex justify-center gap-4">
            <a href="/register/provider/step3" class="px-6 py-3 border border-blue-600 text-blue-600 font-medium rounded-lg transition-colors hover:bg-blue-50">
              Volver a ajustar criterios
            </a>
          </div>
        </div>
      </div>
    </div>
  </main>
  
  <!-- Modal con información básica de cliente -->
  <div id="client-basic-modal" class="fixed inset-0 z-50" style="display: none; background-color: rgba(0,0,0,0.4);">
    <div class="flex items-center justify-center min-h-screen p-4">
      <div class="bg-white rounded-xl max-w-3xl w-full max-h-[90vh] overflow-y-auto shadow-xl">
        <div class="sticky top-0 bg-white p-4 border-b border-gray-200 flex justify-between items-center">
          <h2 class="text-2xl font-bold text-gray-900" id="modal-title">Detalles del cliente</h2>
          <button id="close-basic-modal" class="text-gray-500 hover:text-gray-700 transition-colors p-1 rounded-full hover:bg-gray-100">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        </div>
        <div class="p-6" id="modal-basic-content">
          <!-- El contenido se cargará dinámicamente -->
        </div>
      </div>
    </div>
  </div>
  
  <!-- Modal de registro y planes premium (solo se muestra cuando el usuario hace clic en "Acceder a información completa") -->
  <div id="premium-registration-modal" class="fixed inset-0 z-50" style="display: none; background-color: rgba(0,0,0,0.4);">
    <div class="flex items-center justify-center min-h-screen p-4">
      <div class="bg-white rounded-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto shadow-xl">
        <div class="sticky top-0 bg-white p-4 border-b border-gray-200 flex justify-between items-center">
          <h2 class="text-2xl font-bold text-gray-900">Accede a información completa</h2>
          <button id="close-premium-modal" class="text-gray-500 hover:text-gray-700 transition-colors p-1 rounded-full hover:bg-gray-100">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        </div>
        <!-- El formulario de registro y los pasos de pago solo se muestran cuando se hace clic en "Acceder a información completa" -->
        <div class="p-6">
          <div id="registration-step" class="space-y-6">
            <p class="text-gray-600">
              Para contactar directamente con clientes potenciales y acceder a toda su información, necesitas crear una cuenta.
            </p>
            
            <!-- Formulario de registro -->
            <form id="provider-registration-form">
              <div class="space-y-4 mb-6">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <label for="company" class="block text-sm font-medium text-gray-700 mb-1">Nombre de la Empresa</label>
                    <input 
                      type="text" 
                      id="company" 
                      name="company" 
                      required
                      class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none"
                      placeholder="Nombre de tu empresa"
                    >
                  </div>
                  <div>
                    <label for="industry" class="block text-sm font-medium text-gray-700 mb-1">Industria</label>
                    <select 
                      id="industry" 
                      name="industry" 
                      required
                      class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none"
                    >
                      <option value="">Selecciona una industria</option>
                      <option value="tech">Tecnología</option>
                      <option value="construction">Construcción</option>
                      <option value="health">Salud</option>
                      <option value="education">Educación</option>
                      <option value="financial">Finanzas</option>
                      <option value="retail">Comercio</option>
                      <option value="manufacturing">Manufactura</option>
                    </select>
                  </div>
                </div>
                
                <div>
                  <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Nombre y Apellido</label>
                  <input 
                    type="text" 
                    id="name" 
                    name="name" 
                    required
                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none"
                    placeholder="Tu nombre completo"
                  >
                </div>
                
                <div>
                  <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Correo Electrónico</label>
                  <input 
                    type="email" 
                    id="email" 
                    name="email" 
                    required
                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none"
                    placeholder="ejemplo@empresa.com"
                  >
                </div>
                
                <div>
                  <label for="password" class="block text-sm font-medium text-gray-700 mb-1">Contraseña</label>
                  <input 
                    type="password" 
                    id="password" 
                    name="password" 
                    required
                    minlength="8"
                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none"
                    placeholder="Mínimo 8 caracteres"
                  >
                </div>
                
                <!-- Términos y condiciones -->
                <div class="flex items-start">
                  <div class="flex items-center h-5">
                    <input 
                      type="checkbox" 
                      id="terms" 
                      name="terms" 
                      required
                      class="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500"
                    >
                  </div>
                  <div class="ml-3 text-sm">
                    <label for="terms" class="text-gray-600">
                      Acepto los <a href="/terms" class="text-blue-600 hover:underline">Términos y Condiciones</a> y la <a href="/privacy" class="text-blue-600 hover:underline">Política de Privacidad</a>
                    </label>
                  </div>
                </div>
              </div>
              
              <button 
                type="submit" 
                id="register-button"
                class="w-full px-6 py-3 bg-blue-600 text-white font-medium rounded-lg transition-colors hover:bg-blue-700 shadow-sm"
              >
                Registrarme y continuar
              </button>
            </form>
          </div>
          
          <div id="plans-step" class="hidden space-y-6">
            <p class="text-gray-600 mb-4">
              Selecciona el plan que mejor se adapte a tus necesidades para acceder a información completa de clientes.
            </p>
            
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
              <!-- Plan Básico -->
              <div class="border-2 border-gray-200 rounded-xl p-6 bg-white">
                <h3 class="text-xl font-bold text-gray-900 mb-2">Plan Básico</h3>
                <div class="text-3xl font-bold text-blue-700 mb-4">$19.99 <span class="text-sm font-normal text-gray-600">/ mes</span></div>
                <ul class="space-y-2 mb-6">
                  <li class="flex items-start">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-green-500 flex-shrink-0 mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                    <span>5 contactos directos al mes</span>
                  </li>
                  <li class="flex items-start">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-green-500 flex-shrink-0 mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                    <span>Perfil básico de empresa</span>
                  </li>
                  <li class="flex items-start">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-green-500 flex-shrink-0 mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                    <span>Soporte por email</span>
                  </li>
                </ul>
                <button 
                  class="select-plan-button w-full px-6 py-3 border border-blue-600 text-blue-600 font-medium rounded-lg transition-colors hover:bg-blue-50"
                  data-plan="basic"
                >
                  Seleccionar plan
                </button>
              </div>
              
              <!-- Plan Pro -->
              <div class="border-2 border-blue-200 rounded-xl p-6 bg-white relative">
                <div class="absolute top-0 right-0 bg-blue-600 text-white text-xs font-bold px-3 py-1 rounded-bl-md">POPULAR</div>
                <h3 class="text-xl font-bold text-gray-900 mb-2">Plan Pro</h3>
                <div class="text-3xl font-bold text-blue-700 mb-4">$49.99 <span class="text-sm font-normal text-gray-600">/ mes</span></div>
                <ul class="space-y-2 mb-6">
                  <li class="flex items-start">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-green-500 flex-shrink-0 mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                    <span>25 contactos directos al mes</span>
                  </li>
                  <li class="flex items-start">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-green-500 flex-shrink-0 mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                    <span>Perfil destacado</span>
                  </li>
                  <li class="flex items-start">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-green-500 flex-shrink-0 mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                    <span>Acceso a clientes premium</span>
                  </li>
                </ul>
                <button 
                  class="select-plan-button w-full px-6 py-3 bg-blue-600 text-white font-medium rounded-lg transition-colors hover:bg-blue-700 shadow-sm"
                  data-plan="pro"
                >
                  Seleccionar plan
                </button>
              </div>
              
              <!-- Plan Enterprise -->
              <div class="border-2 border-gray-200 rounded-xl p-6 bg-white">
                <h3 class="text-xl font-bold text-gray-900 mb-2">Plan Enterprise</h3>
                <div class="text-3xl font-bold text-blue-700 mb-4">$99.99 <span class="text-sm font-normal text-gray-600">/ mes</span></div>
                <ul class="space-y-2 mb-6">
                  <li class="flex items-start">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-green-500 flex-shrink-0 mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                    <span>Contactos ilimitados</span>
                  </li>
                  <li class="flex items-start">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-green-500 flex-shrink-0 mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                    <span>Gestor de cuenta dedicado</span>
                  </li>
                  <li class="flex items-start">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-green-500 flex-shrink-0 mt-0.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                    <span>API de integración</span>
                  </li>
                </ul>
                <button 
                  class="select-plan-button w-full px-6 py-3 border border-blue-600 text-blue-600 font-medium rounded-lg transition-colors hover:bg-blue-50"
                  data-plan="enterprise"
                >
                  Seleccionar plan
                </button>
              </div>
            </div>
          </div>
          
          <div id="payment-step" class="hidden space-y-6">
            <div class="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4">
              <div class="flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-blue-500 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                <p class="text-blue-800 text-sm">Este es un entorno de simulación. No se realizará ningún cargo real.</p>
              </div>
            </div>
            
            <div class="p-6 border border-gray-200 rounded-lg">
              <h3 class="text-lg font-medium text-gray-900 mb-4" id="payment-summary-title">Plan Básico - $19.99/mes</h3>
              
              <!-- Simulación de formulario de pago -->
              <div class="space-y-4">
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">Número de tarjeta</label>
                  <input type="text" value="4242 4242 4242 4242" readonly class="w-full px-4 py-3 bg-gray-50 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none">
                </div>
                <div class="grid grid-cols-2 gap-4">
                  <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Fecha de expiración</label>
                    <input type="text" value="12/25" readonly class="w-full px-4 py-3 bg-gray-50 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none">
                  </div>
                  <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">CVC</label>
                    <input type="text" value="123" readonly class="w-full px-4 py-3 bg-gray-50 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none">
                  </div>
                </div>
              </div>
              
              <button 
                id="process-payment-button"
                class="w-full mt-6 px-6 py-3 bg-blue-600 text-white font-medium rounded-lg transition-colors hover:bg-blue-700 shadow-sm"
              >
                Realizar pago
              </button>
            </div>
          </div>
          
          <div id="success-step" class="hidden space-y-6 text-center">
            <div class="w-20 h-20 mx-auto mb-6 text-green-500">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-full w-full" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
            <h3 class="text-2xl font-bold text-gray-900">¡Pago exitoso!</h3>
            <p class="text-gray-600">
              Tu cuenta ha sido creada y activada exitosamente. Ahora tienes acceso completo a todos los detalles de clientes.
            </p>
            <button 
              id="view-full-results-button"
              class="mt-4 px-6 py-3 bg-blue-600 text-white font-medium rounded-lg transition-colors hover:bg-blue-700 shadow-sm"
            >
              Ver resultados completos
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Modal de detalles completos (después del registro y pago premium) -->
  <div id="client-premium-modal" class="fixed inset-0 z-50" style="display: none; background-color: rgba(0,0,0,0.4);">
    <div class="flex items-center justify-center min-h-screen p-4">
      <div class="bg-white rounded-xl max-w-3xl w-full max-h-[90vh] overflow-y-auto shadow-xl">
        <div class="sticky top-0 bg-white p-4 border-b border-gray-200 flex justify-between items-center">
          <h2 class="text-2xl font-bold text-gray-900" id="modal-premium-title">Detalles del cliente</h2>
          <button id="close-premium-details-modal" class="text-gray-500 hover:text-gray-700 transition-colors p-1 rounded-full hover:bg-gray-100">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        </div>
        <div class="p-6" id="modal-premium-content">
          <!-- El contenido se cargará dinámicamente -->
        </div>
      </div>
    </div>
  </div>
  
  <Footer />
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Verificar que venimos del paso anterior
    if (!sessionStorage.getItem('selectedProviderServices') || !sessionStorage.getItem('selectedProviderLocation')) {
      window.location.href = '/register/provider/step1';
      return;
    }
    
    // Elementos DOM principales
    const unlockBasicButton = document.getElementById('unlock-basic-results-button');
    const initialPaywallOverlay = document.getElementById('initial-paywall-overlay');
    const resultsContainer = document.getElementById('results-container');
    const premiumRegistrationModal = document.getElementById('premium-registration-modal');
    const clientBasicModal = document.getElementById('client-basic-modal');
    const clientPremiumModal = document.getElementById('client-premium-modal');
    
    // Referencias a pasos del modal de registro/pago
    const registrationStep = document.getElementById('registration-step');
    const plansStep = document.getElementById('plans-step');
    const paymentStep = document.getElementById('payment-step');
    const successStep = document.getElementById('success-step');
    
    // Botones y formulario de registro
    const registrationForm = document.getElementById('provider-registration-form');
    const registerButton = document.getElementById('register-button');
    const selectPlanButtons = document.querySelectorAll('.select-plan-button');
    const processPaymentButton = document.getElementById('process-payment-button');
    const viewFullResultsButton = document.getElementById('view-full-results-button');
    
    // Botones para cerrar modales
    const closePremiumModalButton = document.getElementById('close-premium-modal');
    const closeBasicModalButton = document.getElementById('close-basic-modal');
    const closePremiumDetailsModalButton = document.getElementById('close-premium-details-modal');
    
    // Datos detallados de clientes
    const clientsDetails = [
      {
        id: 1,
        name: "Innovatech Solutions",
        industry: "tech",
        location: "Madrid, España",
        size: "medium",
        budget: "medium",
        description: "Empresa de desarrollo de software buscando soluciones de ciberseguridad.",
        longDescription: "Innovatech Solutions es una empresa en crecimiento con 150 empleados, especializada en desarrollo de software personalizado. Están buscando implementar soluciones avanzadas de ciberseguridad para proteger su infraestructura y datos de clientes. Requieren una solución completa que incluya evaluación de vulnerabilidades, implementación de cortafuegos y capacitación del personal.",
        match: 95,
        premium: true,
        requirements: [
          "Evaluación integral de seguridad",
          "Implementación de soluciones de protección",
          "Monitoreo continuo de amenazas",
          "Formación en seguridad para el personal"
        ],
        contact: {
          name: "Carlos Ramírez",
          position: "Director de Tecnología",
          phone: "+34 912 345 678",
          email: "cramirez@innovatech.com"
        },
        timeline: "Necesitan implementación en los próximos 3 meses",
        budget_range: "30.000€ - 45.000€"
      },
      // Datos adicionales para otros clientes...
    ];
    
    // Estado de la aplicación
    let selectedClientId = null;
    let selectedPlan = null;
    let userRegistered = false;
    let premiumAccess = false;
    
    // 1. Manejador para el pago inicial de $9
    if (unlockBasicButton) {
      unlockBasicButton.addEventListener('click', () => {
        // Simular procesamiento de pago
        unlockBasicButton.disabled = true;
        unlockBasicButton.innerHTML = '<svg class="animate-spin -ml-1 mr-3 h-5 w-5 inline-block text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg> Procesando...';
        
        setTimeout(() => {
          // Eliminar el overlay inicial
          if (initialPaywallOverlay) {
            initialPaywallOverlay.classList.add('fade-out');
            setTimeout(() => {
              initialPaywallOverlay.remove();
              document.querySelector('.blur-sm')?.classList.remove('blur-sm', 'pointer-events-none');
              
              // Configurar los botones de detalles inmediatamente después de remover el blur
              setupClientDetailsButtons();
            }, 300);
          }
          
          // Guardar que el usuario ha pagado el acceso básico
          sessionStorage.setItem('basicProviderAccessPaid', 'true');
          
          // Mostrar mensaje de éxito
          const successMessage = document.createElement('div');
          successMessage.className = 'fixed bottom-4 right-4 bg-green-600 text-white px-6 py-3 rounded-lg shadow-lg z-50';
          successMessage.innerHTML = `
            <div class="flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              <span>¡Pago exitoso! Clientes desbloqueados.</span>
            </div>
          `;
          document.body.appendChild(successMessage);
          
          // Eliminar el mensaje después de unos segundos
          setTimeout(() => {
            successMessage.classList.add('fade-out');
            setTimeout(() => successMessage.remove(), 300);
          }, 3000);
        }, 1500);
      });
    }
    
    // 2. Configurar botones "Ver detalles" para mostrar modales
    function setupClientDetailsButtons() {
      const detailButtons = document.querySelectorAll('.client-details-button');
      
      detailButtons.forEach(button => {
        button.addEventListener('click', () => {
          const clientId = parseInt(button.dataset.clientId);
          const isPremiumClient = button.dataset.premium === 'true';
          selectedClientId = clientId;
          
          // Encontrar los datos del cliente
          const clientData = potentialClients.find(c => c.id === clientId);
          const clientDetails = clientsDetails.find(c => c.id === clientId) || clientData;
          
          if (clientData) {
            // Verificar si el usuario tiene acceso premium para mostrar detalles completos
            if (userRegistered && premiumAccess) {
              // Si ya está registrado y tiene acceso premium, mostrar detalles completos directamente
              showPremiumDetails(clientDetails);
            } else {
              // Si no tiene acceso premium, mostrar detalles básicos
              const modalTitle = document.getElementById('modal-title');
              const modalContent = document.getElementById('modal-basic-content');
              
              if (modalTitle) {
                modalTitle.textContent = clientData.name;
              }
              
              if (modalContent) {
                modalContent.innerHTML = generateBasicClientDetails(clientData, isPremiumClient);
                
                // Configurar botón para desbloquear información completa
                const unlockFullDetailsButton = document.getElementById('unlock-full-details-button');
                if (unlockFullDetailsButton) {
                  unlockFullDetailsButton.addEventListener('click', () => {
                    // Ocultar modal básico y mostrar proceso de registro/pago
                    clientBasicModal.style.display = 'none';
                    premiumRegistrationModal.style.display = 'block';
                    
                    // Siempre mostrar el paso de registro primero
                    registrationStep.classList.remove('hidden');
                    plansStep.classList.add('hidden');
                    paymentStep.classList.add('hidden');
                    successStep.classList.add('hidden');
                  });
                }
              }
              
              clientBasicModal.style.display = 'block';
            }
          }
        });
      });
    }
    
    // 3. Manejador para el formulario de registro
    if (registrationForm) {
      registrationForm.addEventListener('submit', (e) => {
        e.preventDefault();
        
        // Validar contraseña
        const password = document.getElementById('password').value;
        if (password.length < 8) {
          alert('La contraseña debe tener al menos 8 caracteres');
          return;
        }
        
        // Desactivar botón y mostrar carga
        registerButton.disabled = true;
        registerButton.innerHTML = '<svg class="animate-spin -ml-1 mr-3 h-5 w-5 inline-block text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg> Registrando...';
        
        // Recopilar datos del usuario
        const formData = {
          company: document.getElementById('company').value,
          name: document.getElementById('name').value,
          email: document.getElementById('email').value,
          industry: document.getElementById('industry').value,
          plan: 'free', // Plan inicial gratuito
        };
        
        // Simular registro
        setTimeout(() => {
          // Guardar datos en sessionStorage
          sessionStorage.setItem('providerData', JSON.stringify(formData));
          userRegistered = true;
          
          // Actualizar UI para mostrar las opciones de plan
          if (registrationStep && plansStep) {
            registrationStep.classList.add('hidden');
            plansStep.classList.remove('hidden');
            
            // Asegurarse que los otros pasos estén ocultos
            if (paymentStep) paymentStep.classList.add('hidden');
            if (successStep) successStep.classList.add('hidden');
            
            // Asegurar que los botones de selección de plan tienen los event listeners correctos
            setupPlanButtons();
          } else {
            console.error("No se encontraron los elementos de pasos");
          }
          
          // Actualizar el header para mostrar usuario autenticado
          updateAuthenticationStatus(formData);
        }, 1500);
      });
    } else {
      console.error("No se encontró el formulario de registro");
    }
    
    // 4. Configurar los botones de selección de plan
    function setupPlanButtons() {
      const selectPlanButtons = document.querySelectorAll('.select-plan-button');
      
      if (selectPlanButtons && selectPlanButtons.length > 0) {
        selectPlanButtons.forEach(button => {
          // Remover listeners existentes para evitar duplicados
          const newButton = button.cloneNode(true);
          button.parentNode.replaceChild(newButton, button);
          
          newButton.addEventListener('click', () => {
            selectedPlan = newButton.dataset.plan;
            
            console.log("Plan seleccionado:", selectedPlan);
            
            // Actualizar el resumen del pago
            const paymentSummaryTitle = document.getElementById('payment-summary-title');
            if (paymentSummaryTitle) {
              if (selectedPlan === 'basic') {
                paymentSummaryTitle.textContent = 'Plan Básico - $19.99/mes';
              } else if (selectedPlan === 'pro') {
                paymentSummaryTitle.textContent = 'Plan Pro - $49.99/mes';
              } else {
                paymentSummaryTitle.textContent = 'Plan Enterprise - $99.99/mes';
              }
            }
            
            // Mostrar el paso de pago - asegurarse de que ambos elementos existen
            if (!paymentStep) {
              console.error("El elemento paymentStep no existe");
            }
            
            if (plansStep) {
              plansStep.classList.add('hidden');
            } else {
              console.error("El elemento plansStep no existe");
            }
            
            if (paymentStep) {
              paymentStep.classList.remove('hidden');
              
              // Asegurar que el botón de pago tiene su event listener
              setupPaymentButton();
            }
          });
        });
      } else {
        console.error("No se encontraron botones de selección de plan");
      }
    }
    
    // Función para configurar el botón de pago
    function setupPaymentButton() {
      const processPaymentButton = document.getElementById('process-payment-button');
      
      if (processPaymentButton) {
        // Remover listeners existentes
        const newButton = processPaymentButton.cloneNode(true);
        processPaymentButton.parentNode.replaceChild(newButton, processPaymentButton);
        
        newButton.addEventListener('click', () => {
          // Simular procesamiento de pago
          newButton.disabled = true;
          newButton.innerHTML = '<svg class="animate-spin -ml-1 mr-3 h-5 w-5 inline-block text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg> Procesando...';
          
          setTimeout(() => {
            // Actualizar datos del usuario con el nuevo plan
            const providerData = JSON.parse(sessionStorage.getItem('providerData') || '{}');
            providerData.plan = selectedPlan;
            sessionStorage.setItem('providerData', JSON.stringify(providerData));
            premiumAccess = true;
            
            // Mostrar el paso de éxito
            if (paymentStep) paymentStep.classList.add('hidden');
            if (successStep) successStep.classList.remove('hidden');
            
            // Configurar el botón para ver resultados completos
            const viewFullResultsButton = document.getElementById('view-full-results-button');
            if (viewFullResultsButton) {
              viewFullResultsButton.addEventListener('click', () => {
                // Cerrar el modal de registro/pago
                premiumRegistrationModal.style.display = 'none';
                
                // Si hay un cliente seleccionado, mostrar sus detalles completos
                if (selectedClientId) {
                  const clientData = potentialClients.find(c => c.id === selectedClientId);
                  const clientDetails = clientsDetails.find(c => c.id === selectedClientId) || clientData;
                  if (clientDetails) {
                    showPremiumDetails(clientDetails);
                  }
                }
              });
            }
            
            // Actualizar el header para mostrar el tipo de plan
            updateAuthenticationStatus(providerData);
          }, 2000);
        });
      } else {
        console.error("No se encontró el botón de proceso de pago");
      }
    }
    
    // Inicializar los botones de plan y pago cuando la página se carga
    setupPlanButtons();
    setupPaymentButton();
    
    // 5. Manejadores para los botones de selección de plan
    if (selectPlanButtons && selectPlanButtons.length > 0) {
      selectPlanButtons.forEach(button => {
        button.addEventListener('click', () => {
          selectedPlan = button.dataset.plan;
          
          console.log("Plan seleccionado:", selectedPlan);
          
          // Actualizar el resumen del pago
          const paymentSummaryTitle = document.getElementById('payment-summary-title');
          if (paymentSummaryTitle) {
            if (selectedPlan === 'basic') {
              paymentSummaryTitle.textContent = 'Plan Básico - $19.99/mes';
            } else if (selectedPlan === 'pro') {
              paymentSummaryTitle.textContent = 'Plan Pro - $49.99/mes';
            } else {
              paymentSummaryTitle.textContent = 'Plan Enterprise - $99.99/mes';
            }
          }
          
          // Mostrar el paso de pago
          if (plansStep && paymentStep) {
            plansStep.classList.add('hidden');
            paymentStep.classList.remove('hidden');
          }
        });
      });
    } else {
      console.error("No se encontraron botones de selección de plan");
    }
    
    // 6. Manejador para el botón de procesamiento de pago
    if (processPaymentButton) {
      processPaymentButton.addEventListener('click', () => {
        // Simular procesamiento de pago
        processPaymentButton.disabled = true;
        processPaymentButton.innerHTML = '<svg class="animate-spin -ml-1 mr-3 h-5 w-5 inline-block text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg> Procesando...';
        
        setTimeout(() => {
          // Actualizar datos del usuario con el nuevo plan
          const providerData = JSON.parse(sessionStorage.getItem('providerData') || '{}');
          providerData.plan = selectedPlan;
          sessionStorage.setItem('providerData', JSON.stringify(providerData));
          premiumAccess = true;
          
          // Mostrar el paso de éxito
          paymentStep.classList.add('hidden');
          successStep.classList.remove('hidden');
          
          // Actualizar el header para mostrar el tipo de plan
          updateAuthenticationStatus(providerData);
        }, 2000);
      });
    }
    
    // 7. Manejador para ver resultados completos después del pago exitoso
    if (viewFullResultsButton) {
      viewFullResultsButton.addEventListener('click', () => {
        // Cerrar el modal de registro/pago
        premiumRegistrationModal.style.display = 'none';
        
        // Si hay un cliente seleccionado, mostrar sus detalles completos
        if (selectedClientId) {
          const clientData = potentialClients.find(c => c.id === selectedClientId);
          const clientDetails = clientsDetails.find(c => c.id === selectedClientId) || clientData;
          if (clientDetails) {
            showPremiumDetails(clientDetails);
          }
        }
      });
    }
    
    // 8. Botones para cerrar modales
    if (closeBasicModalButton) {
      closeBasicModalButton.addEventListener('click', () => {
        clientBasicModal.style.display = 'none';
      });
    }
    
    if (closePremiumModalButton) {
      closePremiumModalButton.addEventListener('click', () => {
        premiumRegistrationModal.style.display = 'none';
      });
    }
    
    if (closePremiumDetailsModalButton) {
      closePremiumDetailsModalButton.addEventListener('click', () => {
        clientPremiumModal.style.display = 'none';
      });
    }
    
    // 9. Cerrar modales con Escape o click fuera
    window.addEventListener('click', (event) => {
      if (event.target === clientBasicModal) {
        clientBasicModal.style.display = 'none';
      }
      if (event.target === clientPremiumModal) {
        clientPremiumModal.style.display = 'none';
      }
      // No cerramos el modal de registro/pago al hacer click fuera
    });
    
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        if (clientBasicModal && clientBasicModal.style.display === 'block') {
          clientBasicModal.style.display = 'none';
        }
        if (clientPremiumModal && clientPremiumModal.style.display === 'block') {
          clientPremiumModal.style.display = 'none';
        }
      }
    });
    
    // 10. Funciones de generación de contenidos para modales
    function generateBasicClientDetails(client, isPremiumClient) {
      return `
        <div class="space-y-6">
          <div class="flex items-center gap-2">
            <span class="bg-blue-100 text-blue-800 text-xs px-2 py-0.5 rounded-full">
              ${client.industry === 'tech' ? 'Tecnología' : 
               client.industry === 'construction' ? 'Construcción' : 
               client.industry === 'health' ? 'Salud' : 
               client.industry === 'education' ? 'Educación' :
               client.industry === 'financial' ? 'Finanzas' :
               client.industry === 'retail' ? 'Comercio' : 
               client.industry === 'manufacturing' ? 'Manufactura' : client.industry}
            </span>
            <span class="bg-green-100 text-green-800 text-xs px-2 py-0.5 rounded-full flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
              </svg>
              ${client.match}% coincidencia
            </span>
            ${isPremiumClient ? `
            <span class="bg-yellow-100 text-yellow-800 text-xs px-2 py-0.5 rounded-full">
              Cliente Premium
            </span>
            ` : ''}
          </div>
          
          <div>
            <h3 class="text-lg font-semibold text-gray-900 mb-2">Ubicación</h3>
            <div class="flex items-center text-gray-700">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
              </svg>
              ${client.location}
            </div>
          </div>
          
          <div>
            <h3 class="text-lg font-semibold text-gray-900 mb-2">Descripción</h3>
            <p class="text-gray-700">${client.description}</p>
          </div>
          
          <div>
            <h3 class="text-lg font-semibold text-gray-900 mb-2">Tamaño de empresa</h3>
            <p class="text-gray-700">
              ${client.size === 'micro' ? '1-10 empleados' : 
               client.size === 'small' ? '11-50 empleados' : 
               client.size === 'medium' ? '51-250 empleados' : '250+ empleados'}
            </p>
          </div>
          
          <div>
            <h3 class="text-lg font-semibold text-gray-900 mb-2">Presupuesto estimado</h3>
            <p class="text-gray-700">
              ${client.budget === 'small' ? 'Menos de 1.000€' : 
               client.budget === 'medium' ? '1.000€ - 10.000€' : 
               client.budget === 'large' ? '10.000€ - 50.000€' : 'Más de 50.000€'}
            </p>
          </div>
          
          <div class="border-t border-gray-200 pt-6 mt-6">
            <div class="bg-blue-50 border border-blue-200 rounded-lg p-6 text-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto text-blue-500 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
              </svg>
              <h4 class="text-lg font-semibold text-gray-900 mb-2">Información detallada bloqueada</h4>
              <p class="text-gray-700 mb-4">Desbloquea la información completa para contactar directamente con este cliente potencial.</p>
              <button id="unlock-full-details-button" class="px-6 py-3 bg-blue-600 text-white font-medium rounded-lg transition-colors hover:bg-blue-700 shadow-md">
                Acceder a información completa
              </button>
            </div>
          </div>
        </div>
      `;
    }
    
    function generatePremiumClientDetails(client) {
      return `
        <div class="space-y-6">
          <div class="flex flex-wrap items-center gap-2 mb-4">
            <span class="bg-blue-100 text-blue-800 text-xs px-2 py-0.5 rounded-full">
              ${client.industry === 'tech' ? 'Tecnología' : 
               client.industry === 'construction' ? 'Construcción' : 
               client.industry === 'health' ? 'Salud' : 
               client.industry === 'education' ? 'Educación' :
               client.industry === 'financial' ? 'Finanzas' :
               client.industry === 'retail' ? 'Comercio' : 
               client.industry === 'manufacturing' ? 'Manufactura' : client.industry}
            </span>
            <span class="bg-green-100 text-green-800 text-xs px-2 py-0.5 rounded-full flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
              </svg>
              <span>${client.match}% coincidencia</span>
            </span>
            ${client.premium ? `
            <span class="bg-yellow-100 text-yellow-800 text-xs px-2 py-0.5 rounded-full">
              Cliente Premium
            </span>` : ''}
          </div>

          <div>
            <div class="flex justify-between items-start">
              <h3 class="text-lg font-semibold text-gray-900 mb-2">Descripción detallada</h3>
              <div class="text-right">
                <button class="px-4 py-2 bg-green-600 text-white font-medium rounded-lg transition-colors hover:bg-green-700 flex items-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                  </svg>
                  Contactar
                </button>
              </div>
            </div>
            <p class="text-gray-700">${client.longDescription || client.description}</p>
          </div>
          
          <div>
            <h3 class="text-lg font-semibold text-gray-900 mb-2">Ubicación</h3>
            <div class="flex items-center text-gray-700">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
              </svg>
              ${client.location}
            </div>
          </div>
          
          ${client.requirements ? `
          <div>
            <h3 class="text-lg font-semibold text-gray-900 mb-2">Requerimientos específicos</h3>
            <ul class="list-disc list-inside space-y-1 text-gray-700">
              ${client.requirements.map(req => `<li>${req}</li>`).join('')}
            </ul>
          </div>
          ` : ''}
          
          <div>
            <h3 class="text-lg font-semibold text-gray-900 mb-2">Presupuesto detallado</h3>
            <p class="text-gray-700 font-medium">${client.budget_range || (
              client.budget === 'small' ? 'Menos de 1.000€' : 
              client.budget === 'medium' ? '1.000€ - 10.000€' : 
              client.budget === 'large' ? '10.000€ - 50.000€' : 'Más de 50.000€'
            )}</p>
          </div>
          
          ${client.timeline ? `
          <div>
            <h3 class="text-lg font-semibold text-gray-900 mb-2">Timeline</h3>
            <p class="text-gray-700">${client.timeline}</p>
          </div>
          ` : ''}
          
          <div class="border-t border-gray-200 pt-4 mt-6">
            <h3 class="text-lg font-semibold text-gray-900 mb-2">Información de contacto</h3>
            ${client.contact ? `
              <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
                <div class="space-y-2">
                  <div class="flex items-center text-gray-700">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                    </svg>
                    ${client.contact.name} - ${client.contact.position}
                  </div>
                  <div class="flex items-center text-gray-700">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                    </svg>
                    ${client.contact.phone}
                  </div>
                  <div class="flex items-center text-gray-700">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                    </svg>
                    <a href="mailto:${client.contact.email}" class="text-blue-600 hover:underline">${client.contact.email}</a>
                  </div>
                </div>
              </div>
            ` : `
              <p class="text-gray-700">Contacta para obtener más información.</p>
            `}
          </div>
          
          <div class="flex justify-between pt-4 border-t border-gray-200">
            <button class="px-4 py-2 border border-blue-600 text-blue-600 font-medium rounded-lg transition-colors hover:bg-blue-50">
              Guardar cliente
            </button>
            <button class="px-4 py-2 bg-blue-600 text-white font-medium rounded-lg transition-colors hover:bg-blue-700">
              Enviar propuesta
            </button>
          </div>
        </div>
      `;
    }
    
    // 11. Función para mostrar detalles premium
    function showPremiumDetails(client) {
      const modalPremiumTitle = document.getElementById('modal-premium-title');
      const modalPremiumContent = document.getElementById('modal-premium-content');
      
      if (modalPremiumTitle) {
        modalPremiumTitle.textContent = client.name;
      }
      
      if (modalPremiumContent) {
        modalPremiumContent.innerHTML = generatePremiumClientDetails(client);
      }
      
      if (clientPremiumModal) {
        clientPremiumModal.style.display = 'block';
      }
    }
    
    // 12. Función para actualizar el estado de autenticación en el header
    function updateAuthenticationStatus(userData) {
      const unauthenticatedState = document.getElementById('unauthenticated-state');
      const authenticatedState = document.getElementById('authenticated-state');
      const userNameElement = document.getElementById('user-name');
      const userTypeElement = document.getElementById('user-type');
      const dropdownUserName = document.getElementById('dropdown-user-name');
      const dropdownUserEmail = document.getElementById('dropdown-user-email');
      
      if (unauthenticatedState && authenticatedState && userData) {
        unauthenticatedState.classList.add('hidden');
        authenticatedState.classList.remove('hidden');
        
        if (userNameElement) {
          const firstName = userData.name.split(' ')[0];
          userNameElement.textContent = firstName;
        }
        
        if (userTypeElement) {
          const planLabel = userData.plan === 'free' ? 'Proveedor' : 
                          userData.plan === 'basic' ? 'Proveedor Básico' : 
                          userData.plan === 'pro' ? 'Proveedor Pro' : 'Proveedor Enterprise';
          userTypeElement.textContent = planLabel;
          
          // Estilo especial para planes premium
          if (userData.plan !== 'free') {
            userTypeElement.classList.remove('bg-gray-100', 'text-gray-600');
            userTypeElement.classList.add('bg-yellow-100', 'text-yellow-800');
          }
        }
        
        if (dropdownUserName) {
          dropdownUserName.textContent = userData.name;
        }
        
        if (dropdownUserEmail && userData.email) {
          dropdownUserEmail.textContent = userData.email;
        }
      }
    }
    
    // 13. Verificar el estado del usuario al cargar la página
    const providerData = sessionStorage.getItem('providerData');
    if (providerData) {
      const userData = JSON.parse(providerData);
      userRegistered = true;
      premiumAccess = userData.plan && userData.plan !== 'free';
      updateAuthenticationStatus(userData);
    }
    
    // 14. Verificar si ya pagó el acceso básico (por ejemplo, si recarga la página)
    if (sessionStorage.getItem('basicProviderAccessPaid') === 'true') {
      if (initialPaywallOverlay) {
        initialPaywallOverlay.remove();
        document.querySelector('.blur-sm')?.classList.remove('blur-sm', 'pointer-events-none');
        
        // Es crucial configurar los event listeners después de quitar el blur
        setTimeout(() => {
          setupClientDetailsButtons();
        }, 100);
      }
    }
    
    // Script para inicializar los datos de clientes en window para que estén accesibles
    // después de la carga de la página
    const potentialClientsData = [
      {
        id: 1,
        name: "Innovatech Solutions",
        industry: "tech",
        location: "Madrid, España",
        size: "medium",
        budget: "medium",
        description: "Empresa de desarrollo de software buscando soluciones de ciberseguridad.",
        match: 95,
        premium: true
      },
      {
        id: 2,
        name: "Global Logistics",
        industry: "transport",
        location: "Barcelona, España",
        size: "large",
        budget: "large",
        description: "Empresa de logística buscando servicios de transporte internacional.",
        match: 87,
        premium: false
      },
      {
        id: 3,
        name: "Constructora Moderna",
        industry: "construction",
        location: "Valencia, España",
        size: "medium",
        budget: "large",
        description: "Empresa de construcción necesita servicios de arquitectura e ingeniería.",
        match: 82,
        premium: true
      },
      {
        id: 4,
        name: "HealthTech Solutions",
        industry: "health",
        location: "Madrid, España",
        size: "small",
        budget: "medium",
        description: "Clínica buscando equipamiento médico y software especializado.",
        match: 78,
        premium: false
      }
    ];
    
    // Almacenar datos de clientes en el objeto window para acceso global
    window.potentialClients = potentialClientsData;
  });
</script>